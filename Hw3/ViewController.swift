//
//  ViewController.swift
//  HomeWork3
//
//  Created by Alexander Lesnichy on 25.01.2018.
//  Copyright © 2018 Alexander Lesnichy. All rights reserved.
//

import UIKit

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

        print("Задание из самостоятельной работы")// Написать метод, в который передается номер дня (1-7) и в консоль выводится день недели (Понед - Воскр)

        dayOfWeek(numberOfTheDay: 3)

        print("===================================================")

        print("String Easy. Задание 1.")// Создать строку со своим именем. Написать метод который получает это имя и возвращает кол-во символов в строке с вашим именем. Возвращенное значение показать в консоль

        nameChar (name: "Alexander")

        print("===================================================")

        print("String Easy. Задание 2.")// Написать метод который принимает 2 слова, например имя и фамилию, возвращает юзернейм который имеет буквы нижнего регистра и разделяет имя и фамилию символом “_”

        nameSurname(name: "Alexander", surname: "Lesnichy")

        print("===================================================")

        print("String Easy. Задание 3.")// Создать строку с именем и своим отчеством. Создать метод который проверит его на окончание “ич/на”. Выводит “М” или “Ж” в зависимости от окончания. Также учитывать регистр букв, то есть ИЧ или Ич или На и тд.
        //    Подсказка: в классе написан метод который позволяет проверить на суффикс или префикс, найдите и используйте его

        fathersName (name: "Александр", father: "СЕРГЕЕВИЧ")

        print("===================================================")

        print("Collections Easy. Задание 1.")// Создать массив со значениями типа Int. Выполнить удаление всех элементов массива.

        arrayNumbers()

        print("===================================================")

        print("Collections Easy. Задание 2.")// Создать 2 массива со значениями типа Int. Сделать соединение данных массивов. Результат вывести в консоль.

        connectArs()

        print("===================================================")

        print("Collections Easy. Задание 3.")// Создать массив с любыми значениями типа строка(во viewDidLoad()). Создать метод который будет принимать как аргумент массив. Метод должен выводить в консоль элементы массива (по одному в одной строке)

        let arrayStr = ["one", "two", "three"]
        wordsInArray(Array: arrayStr)

        print("\n" + "===================================================")

        print("Collections Easy. Задание 4.")// Создать массив с любыми значениями типа строка. Создать метод который будет принимать как аргумент массив. Метод должен возвращать массив который состоит из первого и последнего элемента массива, который был параметром

        let arrayStrElements = ["first", "second", "third", "last"]
        firstAndLastElementsOfArray(arr: arrayStrElements)

        print("===================================================")

        print("Collections Easy. Задание 5.")// Создать словарь в котором ключ будет Строкой а значение Целым. Например ключ - имя, значение - возраст. Должно быть 3 элемента (3 пары).
        //Добавить в данный словарь еще 2 новых элемента.

        myFirstDict ()

        print("===================================================")

        print("Collections Easy. Задание 6.") //    Создать словарь в котором ключ будет Строкой а значение Целым. Например ключ - имя, значение - возраст. Должно быть 3 элемента (3 пары).
        //    Создать метод который будет иметь 2 параметра: словарь (типа “Строка : Целое”) и ключ типа Строка. Данный метод должен удалить из полученного (как первый аргумент) словаря элемент ключ которого был передан (как второй аргумент).
        //    Например: передаваемый словарь будет такой:
        //    ["Max": 1, "Dasha": 2, "Sergey": 3]
        //    И если передать второй аргумент "Sergey", то метод должен удалить элемент из передаваемого массива с ключом "Sergey".

        changeDictWith(nameAndAgeDict: ["Alexander": 30, "Inna": 27, "Kokos": 7], someIndexStr: "Inna")

        print("===================================================")

        print("String Hard. Задание 1.") // Создать метод который будет принимать строку где слитно написано Ваши ИмяФамилия “TungFam" и возвращать строку,  где они будут разделены пробелом input = “TungFam” output = “Tung Fam" 


        print("===================================================")
    }

    //    ("Задание из самостоятельной работы")// Написать метод, в который передается номер дня (1-7) и в консоль выводится день недели (Понед - Воскр)

    func dayOfWeek(numberOfTheDay: Int) {
        let days = [" ", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота", "Воскресенье"]
        print(days[numberOfTheDay])
    }

    //    ("String Easy. Задание 1.")// Создать строку со своим именем. Написать метод который получает это имя и возвращает кол-во символов в строке с вашим именем. Возвращенное значение показать в консоль

    func nameChar(name: String) -> Int {
        let count = name.count
        print(count)
        return count
    }

    //    ("String Easy. Задание 2.")// Написать метод который принимает 2 слова, например имя и фамилию, возвращает юзернейм который имеет буквы нижнего регистра и разделяет имя и фамилию символом “_”

    func nameSurname(name: String, surname: String) -> String {
        let userName = name + "_" + surname
        let lowercase = userName.lowercased()
        print(lowercase)
        return lowercase
    }

    //    ("String Easy. Задание 3.")Создать строку с именем и своим отчеством. Создать метод который проверит его на окончание “ич/на”. Выводит “М” или “Ж” в зависимости от окончания. Также учитывать регистр букв, то есть ИЧ или Ич или На и тд.
    //    Подсказка: в классе написан метод который позволяет проверить на суффикс или префикс, найдите и используйте его

    func fathersName (name: String, father: String) {
        if father.hasSuffix("ич") || father.hasSuffix("ИЧ") || father.hasSuffix("Ич") || father.hasSuffix("иЧ") {
            print("\(name) \(father) - МУЖЧИНА")
        }
        if father.hasSuffix("на") || father.hasSuffix("НА") || father.hasSuffix("На") || father.hasSuffix("нА"){
            print("\(name) \(father) - ЖЕНЩИНА")
        }
    }

    //    Collections Easy:
    //    Задание1
    //    Создать массив со значениями типа Int. Выполнить удаление всех элементов массива.

    func arrayNumbers() {
        var numbers = [1,2,3]
        numbers.removeAll()
    }

    //    Задание2
    //    Создать 2 массива со значениями типа Int. Сделать соединение данных массивов. Результат вывести в консоль.

    func connectArs() {
        let arr1: [Int] = [1,2,3]
        let arr2: [Int] = [4,5,6]
        let resultArr: [Int] = arr1 + arr2
        print(resultArr)
    }

    //    Задание3
    //    Создать массив с любыми значениями типа строка(во viewDidLoad()). Создать метод который будет принимать как аргумент массив. Метод должен выводить в консоль элементы массива (по одному в одной строке)

    func wordsInArray(Array: [String]) {
        for x in Array {
            print(x, separator: " ", terminator: " ")
        }
    }

    //    Задание4
    //    Создать массив с любыми значениями типа строка. Создать метод который будет принимать как аргумент массив. Метод должен возвращать массив который состоит из первого и последнего элемента массива, который был параметром

    func firstAndLastElementsOfArray(arr: [String]) {
        print(arr.first ?? "", arr.last ?? "")
    }

    //Задание5
    //Создать словарь в котором ключ будет Строкой а значение Целым. Например ключ - имя, значение - возраст. Должно быть 3 элемента (3 пары).
    //Добавить в данный словарь еще 2 новых элемента.

    func myFirstDict() {
        var nameWithAgeDict = ["Alexander": 30,
                               "Inna": 27,
                               "Kokos": 7]
        nameWithAgeDict["Konstantin"] = 77
        nameWithAgeDict["Valera"] = 50
        print(nameWithAgeDict)
    }

    //    Задание6
    //    Создать словарь в котором ключ будет Строкой а значение Целым. Например ключ - имя, значение - возраст. Должно быть 3 элемента (3 пары).
    //    Создать метод который будет иметь 2 параметра: словарь (типа “Строка : Целое”) и ключ типа Строка. Данный метод должен удалить из полученного (как первый аргумент) словаря элемент ключ которого был передан (как второй аргумент).
    //    Например: передаваемый словарь будет такой:
    //    ["Max": 1, "Dasha": 2, "Sergey": 3]
    //    И если передать второй аргумент "Sergey", то метод должен удалить элемент из передаваемого массива с ключом "Sergey".

    func changeDictWith(nameAndAgeDict: [String: Int], someIndexStr: String) {
        var xDict: [String: Int]
        xDict = nameAndAgeDict
        xDict.removeValue(forKey: someIndexStr)
        print(xDict)
    }

    // String Hard. Задание 1 // Создать метод который будет принимать строку где слитно написано Ваши ИмяФамилия “TungFam" и возвращать строку,  где они будут разделены пробелом input = “TungFam” output = “Tung Fam" 







}

